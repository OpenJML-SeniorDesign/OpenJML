name: Build OpenJML

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        ## Windows jobs fail on some lit tests and sometimes fail even to
        ## setup a work environment (e.g. dotnet installation)
        ##os: [ubuntu-latest]
        ##os: [ubuntu-latest, windows-latest, ubuntu-16.04]
        os: [ubuntu-latest, windows-latest, macos-latest]
        ##os: [ubuntu-latest, macos-latest]

      fail-fast: false
    steps:
    - name: Manually sync certs
      if: runner.os == 'Linux'
      run: cert-sync /etc/ssl/certs/ca-certificates.crt
    - name: Linux additions
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libxext-dev libxtst-dev libxrandr-dev libcups2-dev
        sudo apt-get install libasound2-dev
    - uses: actions/setup-python@v1
    - name: Set up JDK16 
      uses: actions/setup-java@v1
      with:
        java-version: 1.16
    - name: Checkout OpenJML
      run: |
        git clone https://github.com/OpenJML/OpenJML
        git clone https://github.com/OpenJML/Specs
        git clone https://github.com/OpenJML/Solvers
        cd Specs
        git checkout development-module
        cd ../OpenJML
        git checkout development-module
    - name: Build OpenJML Windows
      if: runner.os == 'Windows'
      run: |
        cd OpenJML/OpenJDKModule
        bash ./configure
    - name: Build OpenJML
      if: runner.os != 'Windows'
      run: |
        cd OpenJML/OpenJDKModule
        bash ./configure
    - name: Build release
      run: |
        cd OpenJML/OpenJDKModule
        make release trial
    - name: Publish release
      run: |
        cd OpenJML/OpenJDKModule/release-temp
        export ver=0.11.0
        export f=openjml-${{ matrix.os }}-${ver}.zip
        mv *.zip $f
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"tag_name\":\"v$ver\", \"target\":\"development-module\", \"name\":\"OpenJML $ver\", \"draft\":true, \"body\":\"Publishing release $ver\"}" "https://api.github.com/repos/OpenJML/OpenJML/releases" > /tmp/post
        echo Uploading $f
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/zip" --data-binary @$f  "$upload_url?name=$f&label=$f"
